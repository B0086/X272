using System;
using System.IO;
using System.Net;
using System.Text;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        string listenAddress = "http://localhost:8888/";

        using (HttpListener listener = new HttpListener())
        {
            listener.Prefixes.Add(listenAddress);
            listener.Start();
            Console.WriteLine($"Dinleme başlatıldı. {listenAddress} adresini dinliyor...");

            while (true)
            {
                HttpListenerContext context = await listener.GetContextAsync();
                _ = HandleRequestAsync(context);
            }
        }
    }

    static async Task HandleRequestAsync(HttpListenerContext context)
    {
        HttpListenerRequest request = context.Request;
        HttpListenerResponse response = context.Response;

        string requestBody;
        using (var reader = new StreamReader(request.InputStream, request.ContentEncoding))
        {
            requestBody = await reader.ReadToEndAsync();
        }

        Console.WriteLine($"Gelen istek: {request.HttpMethod} {request.Url}");

        // İstek üzerinde değişiklikler yapabilirsiniz
        // Örneğin, hedef IP adresini değiştirebilirsiniz

        string modifiedRequestBody = requestBody; // Değişiklik yapmadan önce orijinal isteği kopyalayın

        // Yeni hedef IP adresi
        string newDestinationIpAddress = "185.205.19.150";

        // Hedef IP adresini değiştirme
        modifiedRequestBody = modifiedRequestBody.Replace("45.13.227.206", newDestinationIpAddress);

        // Yeni isteği hazırlama
        byte[] responseData = Encoding.UTF8.GetBytes(modifiedRequestBody);
        response.StatusCode = 200;
        response.ContentType = "text/plain";
        response.ContentLength64 = responseData.Length;

        // Yeni isteği gönderme
        await response.OutputStream.WriteAsync(responseData, 0, responseData.Length);
        response.Close();

        Console.WriteLine("İstek yönlendirildi ve yanıt gönderildi.");
    }
}
